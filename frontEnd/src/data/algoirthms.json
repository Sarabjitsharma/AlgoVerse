{
  "articles": [
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d0",
      "title": "Binary Search",
      "slug": "binary-search",
      "description": "Learn how binary search efficiently finds elements in sorted arrays with O(log n) time complexity through divide and conquer approach.",
      "category": "Searching",
      "difficulty": "Beginner",
      "readTime": 8,
      "tags": ["searching", "divide-and-conquer", "sorted-array", "logarithmic"],
      "featured": true,
      "published": true,
      "path": "/algorithms/binary-search",
      "externalUrl": null,
      "createdAt": "2024-01-15T10:30:00Z",
      "updatedAt": "2024-01-15T10:30:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d1",
      "title": "Quick Sort",
      "slug": "quick-sort",
      "description": "Master the quick sort algorithm, one of the most efficient sorting techniques with average O(n log n) time complexity using pivot-based partitioning.",
      "category": "Sorting",
      "difficulty": "Intermediate",
      "readTime": 12,
      "tags": ["sorting", "divide-and-conquer", "partitioning", "pivot"],
      "featured": true,
      "published": true,
      "path": "/algorithms/quick-sort",
      "externalUrl": null,
      "createdAt": "2024-01-16T14:20:00Z",
      "updatedAt": "2024-01-16T14:20:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d2",
      "title": "Merge Sort",
      "slug": "merge-sort",
      "description": "Understand merge sort's stable O(n log n) sorting algorithm that uses divide and conquer to efficiently sort large datasets.",
      "category": "Sorting",
      "difficulty": "Intermediate",
      "readTime": 10,
      "tags": ["sorting", "divide-and-conquer", "stable-sort", "merging"],
      "featured": false,
      "published": true,
      "path": "/algorithms/merge-sort",
      "externalUrl": null,
      "createdAt": "2024-01-17T09:15:00Z",
      "updatedAt": "2024-01-17T09:15:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d3",
      "title": "LeetCode Binary Search",
      "slug": "leetcode-binary-search",
      "description": "Practice binary search problems on LeetCode with curated problem sets and detailed solutions.",
      "category": "Practice",
      "difficulty": "Beginner",
      "readTime": 0,
      "tags": ["practice", "leetcode", "binary-search"],
      "featured": false,
      "published": true,
      "path": null,
      "externalUrl": "https://leetcode.com/tag/binary-search/",
      "createdAt": "2024-01-18T11:45:00Z",
      "updatedAt": "2024-01-18T11:45:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d4",
      "title": "Depth-First Search (DFS)",
      "slug": "depth-first-search",
      "description": "Explore graph traversal using DFS algorithm, essential for tree/graph problems, backtracking, and finding connected components.",
      "category": "Graph Traversal",
      "difficulty": "Beginner",
      "readTime": 9,
      "tags": ["graph", "traversal", "recursion", "stack", "backtracking"],
      "featured": true,
      "published": true,
      "path": "/algorithms/dfs",
      "externalUrl": null,
      "createdAt": "2024-01-19T16:30:00Z",
      "updatedAt": "2024-01-19T16:30:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d5",
      "title": "GeeksforGeeks BFS Tutorial",
      "slug": "gfg-bfs-tutorial",
      "description": "Comprehensive BFS tutorial with examples, code implementations, and practice problems from GeeksforGeeks.",
      "category": "Tutorial",
      "difficulty": "Beginner",
      "readTime": 0,
      "tags": ["tutorial", "bfs", "geeksforgeeks"],
      "featured": false,
      "published": true,
      "path": null,
      "externalUrl": "https://www.geeksforgeeks.org/breadth-first-search-or-bfs-for-a-graph/",
      "createdAt": "2024-01-20T13:10:00Z",
      "updatedAt": "2024-01-20T13:10:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d6",
      "title": "Dynamic Programming Basics",
      "slug": "dynamic-programming-basics",
      "description": "Understand the fundamentals of dynamic programming, memoization, and how to solve optimization problems by breaking them into subproblems.",
      "category": "Dynamic Programming",
      "difficulty": "Intermediate",
      "readTime": 18,
      "tags": ["dynamic-programming", "memoization", "optimization", "subproblems"],
      "featured": true,
      "published": true,
      "path": "/algorithms/dynamic-programming",
      "externalUrl": null,
      "createdAt": "2024-01-21T10:25:00Z",
      "updatedAt": "2024-01-21T10:25:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d7",
      "title": "Visualize Algorithms",
      "slug": "algorithm-visualizer",
      "description": "Interactive algorithm visualizations to help understand how different algorithms work step by step.",
      "category": "Visualization",
      "difficulty": "Beginner",
      "readTime": 0,
      "tags": ["visualization", "interactive", "learning"],
      "featured": true,
      "published": true,
      "path": null,
      "externalUrl": "https://algorithm-visualizer.org/",
      "createdAt": "2024-01-22T15:40:00Z",
      "updatedAt": "2024-01-22T15:40:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d8",
      "title": "Hash Tables",
      "slug": "hash-tables",
      "description": "Explore hash tables, hash functions, collision resolution techniques, and achieve O(1) average time complexity for insertions and lookups.",
      "category": "Hash Tables",
      "difficulty": "Beginner",
      "readTime": 10,
      "tags": ["hashing", "hash-function", "collision", "constant-time"],
      "featured": false,
      "published": true,
      "path": "/algorithms/hash-tables",
      "externalUrl": null,
      "createdAt": "2024-01-23T12:20:00Z",
      "updatedAt": "2024-01-23T12:20:00Z"
    },
    {
      "_id": "6502a1b2c3d4e5f6a7b8c9d9",
      "title": "HackerRank Practice",
      "slug": "hackerrank-practice",
      "description": "Solve algorithm challenges on HackerRank to improve your problem-solving skills with real coding interviews.",
      "category": "Practice",
      "difficulty": "Intermediate",
      "readTime": 0,
      "tags": ["practice", "hackerrank", "coding-interview"],
      "featured": false,
      "published": true,
      "path": null,
      "externalUrl": "https://www.hackerrank.com/domains/algorithms",
      "createdAt": "2024-01-24T09:50:00Z",
      "updatedAt": "2024-01-24T09:50:00Z"
    }
  ]
}